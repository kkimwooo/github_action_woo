name: Simple Go Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go version
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.0'

      - name: run go
        run: go run hello.go

      - name: build go
        run: go build -o build/hello hello.go

      - name: Upload Go binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-binary
          path: build/hello

  test:
    name: Test
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Set Test
        id: set-test-stage
        run: echo ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  dev:
    name: Dev
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Set Dev
        id: set-dev-stage
        run: echo ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  run:
    name: Run
    needs: [ test, dev ]
    runs-on: ubuntu-latest
    steps:
      - name: Download Go binary artifact
        uses: actions/download-artifact@v4
        with:
          name: hello-binary
          path: build/

      - name: Set execute permission
        run: chmod +x build/hello

      - name: Run Go binary
        run: ./build/hello


      - uses: actions/checkout@v2
      - name: 버전 정보 추출
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
        id: extract_version_name       
      - name: Release 생성 
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ steps.extract_version_name.outputs.version }} 
          release_name: ${{ steps.extract_version_name.outputs.version }} 
